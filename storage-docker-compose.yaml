version: "3.8"
# Docker compose for Trino - Hive Metastore - MinIO.

services:
  trino:
    ports:
      - "8084:8080"
    container_name: datalake-trino
    image: "trinodb/trino:410"
    hostname: trino
    volumes:
      - ./trino/etc:/usr/lib/trino/etc:ro
      - ./trino/catalog:/etc/trino/catalog
    depends_on:
      - hive-metastore

  # use PostgreSQL to store Hive metadata
  metastore_db:
    container_name: datalake-metastore-db
    image: postgres:11
    hostname: metastore_db
    ports:
      - "5433:5432" # Access via Thrift protocol
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore

  # Hive Metastore - service to get and store metadata about db, table definition, ...
  hive-metastore:
    container_name: datalake-hive-metastore
    image: 'starburstdata/hive:3.1.2-e.18'
    ports:
      - '9083:9083' # Metastore Thrift
    environment:
      HIVE_METASTORE_DRIVER: org.postgresql.Driver
      HIVE_METASTORE_JDBC_URL: jdbc:postgresql://metastore_db:5432/metastore
      HIVE_METASTORE_USER: hive
      HIVE_METASTORE_PASSWORD: hive
      HIVE_METASTORE_WAREHOUSE_DIR: s3://datalake/
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: admin # access and secret key for MinIO also
      S3_SECRET_KEY: password
      S3_PATH_STYLE_ACCESS: "true"
      # Below arguments exist for no reason :)
      # But we cannot live without it
      REGION: ""
      GOOGLE_CLOUD_KEY_FILE_PATH: ""
      AZURE_ADL_CLIENT_ID: ""
      AZURE_ADL_CREDENTIAL: ""
      AZURE_ADL_REFRESH_URL: ""
      AZURE_ABFS_STORAGE_ACCOUNT: ""
      AZURE_ABFS_ACCESS_KEY: ""
      AZURE_WASB_STORAGE_ACCOUNT: ""
      AZURE_ABFS_OAUTH: ""
      AZURE_ABFS_OAUTH_TOKEN_PROVIDER: ""
      AZURE_ABFS_OAUTH_CLIENT_ID: ""
      AZURE_ABFS_OAUTH_SECRET: ""
      AZURE_ABFS_OAUTH_ENDPOINT: ""
      AZURE_WASB_ACCESS_KEY: ""
      HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin"
    depends_on:
      - metastore_db

  # Parquet files stored in MinIO object storage
  minio:
    image: minio/minio
    container_name: datalake-minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key
    command: server --console-address ":9001" /data

#  mc:
#    depends_on:
#      - minio
#    image: minio/mc
#    environment:
#      - AWS_ACCESS_KEY_ID=admin
#      - AWS_SECRET_ACCESS_KEY=password
#      - AWS_REGION=us-east-1
#    entrypoint: >
#      /bin/sh -c "
#      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
#      /usr/bin/mc rm -r --force minio/warehouse;
#      /usr/bin/mc mb minio/warehouse;
#      /usr/bin/mc policy set public minio/warehouse;
#      tail -f /dev/null
#      "

volumes:
  minio_storage:
  data:
    driver: local
